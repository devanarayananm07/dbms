SQL*Plus: Release 21.0.0.0.0 - Production on Tue Mar 5 22:38:32 2024
Version 21.3.0.0.0

Copyright (c) 1982, 2021, Oracle.  All rights reserved.

Enter user-name: system
Enter password:
Last Successful login time: Mon Mar 04 2024 12:06:16 -08:00

Connected to:
Oracle Database 21c Express Edition Release 21.0.0.0.0 - Production
Version 21.3.0.0.0

SQL> set serveroutput on
SQL> begin
  2  dbms_output.Put_line('hai');
  3  end;
  4  /
hai

PL/SQL procedure successfully completed.

SQL> set serveroutput on
SQL> declare
  2
  3      var1 varchar(10);
  4         num1 int(30);
  5         begin
  6         var1:='hello';
  7         num1:=100;
  8         dbms_output.Put_line('var1:'||var1);
  9         dbms_output.Put_line('Num1:'||num1);
 10        end;
 11       /
var1:hello
Num1:100

PL/SQL procedure successfully completed.


SQL> set serveroutput on
SQL> CREATE OR REPLACE PROCEDURE greetings
  2  AS
  3  BEGIN
  4  dbms_output.put_line('Hello World!');
  5  END;
  6  /

Procedure created.

SQL> execute greetings
Hello World!

PL/SQL procedure successfully completed.

SQL> create table Employees(eid int,fname varchar(30),salary int);

Table created.

SQL> insert into Employees values(100,'ram',30000);

1 row created.

SQL> insert into Employees values(101,'sam',4000);

1 row created.

SQL>  declare
  2      name varchar(10);
  3      sal int(20);
  4      begin
  5      select fname,salary into name,sal from Employees where eid=100;
  6      dbms_output.Put_line('Name:'||name);
  7      dbms_output.Put_line('Salary:'||sal);
  8      end;
  9      /
Name:ram
Salary:30000

PL/SQL procedure successfully completed.

SQL> declare
  2          name Employees.fname%TYPE;
  3          sal Employees.salary%TYPE;
  4          lname name%TYPE;
  5          begin
  6          select fname,salary into name,sal from Employees where eid=100;
  7          dbms_output.Put_line('Name:'||name);
  8          dbms_output.Put_line('Salary:'||sal);
  9          end;
 10      /
Name:ram
Salary:30000

PL/SQL procedure successfully completed.

SQL> set serveroutput on
SQL>  declare
  2    num number := 6;
  3    fact number := 1;
  4    temp number;
  5    begin
  6    temp :=num;
  7    while( temp>0 )
  8    loop
  9    fact := fact*temp;
 10    temp := temp-1;
 11   end loop;
 12    dbms_output.put_line('factorial of '|| num || ' is ' || fact);
 13    end;
 14    /
factorial of 6 is 720

PL/SQL procedure successfully completed.

SQL> set serveroutput on
SQL> declare
  2    n number;
  3    fac number:=1;
  4    i number;
  5    begin
  6   n:=&n;
  7
  8    for i in 1..n
  9   loop
 10   fac:=fac*i;
 11    end loop;
 12   dbms_output.put_line('factorial='||fac);
 13   end;
 14    /
Enter value for n: 5
old   6:  n:=&n;
new   6:  n:=5;
factorial=120

PL/SQL procedure successfully completed.

SQL> declare
  2
  3      x number(5);
  4      y number(5);
  5      z number(7);
  6        begin
  7     x:=10;
  8    y:=20;
  9    z:=x+y;
 10    dbms_output.put_line('Sum is '||z);
 11    end;
 12    /
Sum is 30

PL/SQL procedure successfully completed.

SQL> Declare
  2     Var1 integer;
  3     Var2 integer;
  4     Var3 integer;
  5     Begin
  6     Var1:=&var1;
  7     Var2:=&var2;
  8     Var3:=var1+var2;
  9     Dbms_output.put_line(var3);
 10    End;
 11     /
Enter value for var1: 6
old   6:    Var1:=&var1;
new   6:    Var1:=6;
Enter value for var2: 4
old   7:    Var2:=&var2;
new   7:    Var2:=4;
10

PL/SQL procedure successfully completed.

SQL> begin
  2     dbms_output.put_line('This is my first PL/SQL Program');
  3     dbms_output.put_line('PL/SQL is a procedural Language');
  4     dbms_output.put_line('I like PL/SQL');
  5    end;
  6    /
This is my first PL/SQL Program
PL/SQL is a procedural Language
I like PL/SQL

PL/SQL procedure successfully completed.

SQL> declare
  2    num1 number;
  3    num2 number;
  4    num3 number;
  5    begin
  6    num1:=20;
  7    num2:=15;
  8   num3:=num1+num2;
  9    dbms_output.put_line('The sum of  '||num1||'  and  '||num2||'  is  '||num3);
 10    num3:=num1-num2;
 11    dbms_output.put_line('The subtraction of  '||num1||'  and  '||num2||'  is'||num3);
 12   num3:=num1*num2;
 13    dbms_output.put_line('The multiplication of  '||num1||'  and  '||num2||'is  '||num3);
 14    num3:=num1/num2;
 15    dbms_output.put_line('The division of  '||num1||'  and  '||num2||'  is  '||num3);
 16    end;
 17      /
The sum of  20  and  15  is  35
The subtraction of  20  and  15  is5
The multiplication of  20  and  15is  300
The division of  20  and  15  is  1.33333333333333333333333333333333333333

PL/SQL procedure successfully completed.

SQL> declare
  2    num1 number;
  3    num2 number;
  4    num3 number;
  5    begin
  6    num1:=&num1;
  7    num2:=&num2;
  8    num3:=num1+num2;
  9    dbms_output.put_line('The sum of  '||num1||'  and  '||num2||'  is  '||num3);
 10   num3:=num1-num2;
 11    dbms_output.put_line('The subtraction of  '||num1||'  and  '||num2||'  is '||num3);
 12    num3:=num1*num2;
 13    dbms_output.put_line('The multiplication of  '||num1||'  and  '||num2||'is  '||num3);
 14    num3:=num1/num2;
 15    dbms_output.put_line('The division of  '||num1||'  and  '||num2||'  is  '||num3);
 16    end;
 17    /
Enter value for num1: 6
old   6:   num1:=&num1;
new   6:   num1:=6;
Enter value for num2: 4
old   7:   num2:=&num2;
new   7:   num2:=4;
The sum of  6  and  4  is  10
The subtraction of  6  and  4  is 2
The multiplication of  6  and  4is  24
The division of  6  and  4  is  1.5

PL/SQL procedure successfully completed.

SQL> declare
  2  x number;
  3  begin
  4  x:=&number;
  5  if mod(x,2)=0 then
  6  dbms_output.put_line('The number '||x||'is even');
  7  else
  8  dbms_output.put_line('The number  '||x||'is odd');
  9  end if;
 10  end;
 11  /
Enter value for number: 5
old   4: x:=&number;
new   4: x:=5;
The number  5is odd

PL/SQL procedure successfully completed.

SQL> declare
  2  x number;
  3  begin
  4  x:=&number;
  5  if mod(x,2)=0 then
  6  dbms_output.put_line('The number '||x||'is even');
  7  else
  8  dbms_output.put_line('The number  '||x||'is odd');
  9  end if;
 10  end;
 11  /
Enter value for number: 6
old   4: x:=&number;
new   4: x:=6;
The number 6is even

PL/SQL procedure successfully completed.



PL/SQL procedure successfully completed.

SQL> declare
  2   x number;
  3   y number;
  4    z number;
  5    begin
  6    x:=&number1;
  7    y:=&number2;
  8    z:=&number3;
  9    if x>y and x>z then
 10   dbms_output.put_line('x is largest');
 11   end if;
 12    if y>x and y>z then
 13    dbms_output.put_line('y is largest');
 14    end if;
 15   if z>x and z>y then
 16   dbms_output.put_line('z is largest');
 17   end if;
 18    end;
 19    /
Enter value for number1: 10
old   6:   x:=&number1;
new   6:   x:=10;
Enter value for number2: 20
old   7:   y:=&number2;
new   7:   y:=20;
Enter value for number3: 30
old   8:   z:=&number3;
new   8:   z:=30;
z is largest

PL/SQL procedure successfully completed.

SQL> declare
  2     x number;
  3     y number;
  4     z number;
  5     begin
  6     x:=&number1;
  7     y:=&number2;
  8     z:=&number3;
  9    if x>y and x>z then
 10     dbms_output.put_line('x is largest');
 11    elsif y>x and y>z then
 12     dbms_output.put_line('y is largest');
 13     else
 14    dbms_output.put_line('z is largest');
 15    end if;
 16     end;
 17     /
Enter value for number1: 5
old   6:    x:=&number1;
new   6:    x:=5;
Enter value for number2: 9
old   7:    y:=&number2;
new   7:    y:=9;
Enter value for number3: 3
old   8:    z:=&number3;
new   8:    z:=3;
y is largest

PL/SQL procedure successfully completed.

--------------------------------------------------------------------------------------------------------------------------------------------


                        PROCEDURE
                        _________

SQL> CREATE OR REPLACE PROCEDURE welcome
  2    AS
  3    BEGIN
  4       dbms_output.put_line('Hai!');
  5    END;
  6   /

Procedure created.

SQL> execute welcome
Hai!

PL/SQL procedure successfully completed.

SQL> SET SERVEROUTPUT ON
SQL> DECLARE
  2      a number;
  3      b number;
  4      c number;
  5   PROCEDURE findMin(x IN number, y IN number, z OUT number) IS
  6   BEGIN
  7       IF x < y THEN
  8         z:= x;
  9      ELSE
 10          z:= y;
 11      END IF;
 12    END;
 13    BEGIN
 14       a:= 31;
 15       b:= 56;
 16       findMin(a, b, c);
 17      dbms_output.put_line(' Minimum of (31,56: ' || c);
 18    END;
 19   /
Minimum of (31,56: 31

PL/SQL procedure successfully completed.

22)
SQL> DECLARE
  2       a number;
  3    PROCEDURE squareNum(x IN OUT number) IS
  4    BEGIN
  5      x := x * x;
  6    END;
  7    BEGIN
  8       a:= 21;
  9       squareNum(a);
 10       dbms_output.put_line(' Square of (21): ' || a);
 11    END;
 12    /
Square of (21): 441

PL/SQL procedure successfully completed.

SQL> create table dept1(eid int,ename varchar(20),psal int,ploc varchar(30));

Table created.
SQL> CREATE OR REPLACE PROCEDURE addemp
  2  (depid IN dept.eid%TYPE,
  3  depname IN dept1.ename%TYPE,
  4  depsal IN dept1.psal%TYPE,
  5  deploc IN dept1.ploc%TYPE)
  6  IS
  7  BEGIN
  8  INSERT INTO dept1 Values(depid,depname,depsal,deploc);
  9  dbms_output.Put_line('dpmt added');
 10  end;
 11  /

Procedure created.

execute addemp(2,'MARY',3000,'klm');

dpmt added

PL/SQL procedure successfully completed.


SQL> select * from dept1;

       EID ENAME                      PSAL PLOC
---------- -------------------- ---------- ---------------------
         2 MARY                       3000 klm



----------------------------------------------------------------------------------------------------------------------------------------------

                         FUNCTIONS
                         ________



SQL> create function sqarea1(len int)return int is
  2
  3      area int(5,3);
  4      begin
  5      area:=(len*len);
  6      return area;
  7      end;
  8    /

Function created.

SQL>  begin
  2    dbms_output.Put_line('area='||sqarea1(4));
  3    end;
  4    /
area=16

PL/SQL procedure successfully completed.

SQL>
SQL>
SQL>
SQL> create or replace function adder(n1 in number, n2 in number)
  2       return number
  3        is
  4        n3 number(8);
  5        begin
  6        n3 :=n1+n2;
  7        return n3;
  8        end;
  9        /

Function created.

SQL> DECLARE
  2         n3 number(2);
  3      BEGIN
  4         n3 := adder(11,22);
  5         dbms_output.put_line('Addition is: ' || n3);
  6      END;
  7      /
Addition is: 33

PL/SQL procedure successfully completed.

SQL>
SQL>
SQL>
SQL>  DECLARE
  2        a number;
  3        b number;
  4        c number;
  5     FUNCTION findMax(x IN number, y IN number)
  6     RETURN number
  7     IS
  8         z number;
  9     BEGIN
 10        IF x > y THEN
 11           z:= x;
 12        ELSE
 13           Z:= y;
 14        END IF;
 15         RETURN z;
 16     END;
 17     BEGIN
 18        a:= 23;
 19        b:= 45;
 20         c := findMax(a, b);
 21        dbms_output.put_line(' Maximum of (23,45): ' || c);
 22     END;
 23     /
Maximum of (23,45): 45

PL/SQL procedure successfully completed.

SQL>
SQL>
SQL>
SQL> create table customers(id int,name varchar(20),dpmt varchar(20),salary int);

Table created.

SQL> insert into customers values(1,'sam','cs',2000);

1 row created.

SQL>  insert into customers values(2,'tam','it',3000);

1 row created.

SQL>
SQL> insert into customers values(3,'ram','ec',2500);

1 row created.

SQL> insert into customers values(4,'kam','mca',5000);

1 row created.

SQL> select * from customers;

        ID NAME                 DPMT                     SALARY
---------- -------------------- -------------------- ----------
         1 sam                  cs                         2000
         2 tam                  it                         3000
         3 ram                  ec                         2500
         4 kam                  mca                        5000

SQL> CREATE OR REPLACE FUNCTION totalCustomers
  2          RETURN number IS
  3             total number(2) := 0;
  4          BEGIN
  5             SELECT count(*) into total
  6             FROM customers;
  7              RETURN total;
  8         END;
  9        /

Function created.

SQL>
SQL>   DECLARE
  2            c number(2);
  3          BEGIN
  4             c := totalCustomers();
  5             dbms_output.put_line('Total no. of Customers: ' || c);
  6          END;
  7          /
Total no. of Customers: 4

PL/SQL procedure successfully completed.
